{
    "setting_user_input_validation": {
                                        "template": "Is the following a description of a place, situation or activity involving people? \"{}\"  Respond only with 1 if it clearly does, otherwise 0.",
                                        "n_args": 1
                                        },

    "role_inference_description":{
                        "template": "Based on a provided setting description, infere two roles involved in the conversation in the provided setting. Assign a more moderatory role to GPT and the other to user. If one role is mentioned in the description, use it as a GPT_role Fully adhere to the output format \"roles\": [\"ROLE1\", \"ROLE2\"],\"GPT_role\": \"ROLE\",\"user_role\": \"ROLE\" ",
                        "n_args": 0   
                    },
    
    "role_inference_examples":{
                        "template": "Examples:\n\n",
                        "n_args": 0,   
                        "choices": [
                            "\"setting\": \"A conversation in a cafe in english.\", \"roles\": [\"waiter\", \"customer\"], \"GPT_role\": \"waiter\", \"user_role\": \"customer\"\n",
                            "\"setting\": \"A conversation in a library.\", \"roles\": [\"student\", \"librarian\"], \"GPT_role\": \"librarian\", \"user_role\": \"student\"\n",
                            "\"setting\": \"A conversation with a friend.\", \"roles\": [\"me\", \"friend\"], \"GPT_role\": \"friend\", \"user_role\": \"me\"\n",
                            "\"setting\": \"In a police station.\", \"roles\": [\"me\", \"policeman\"], \"GPT_role\": \"policeman\", \"user_role\": \"me\"\n",
                            "\"setting\": \"Talking to Albert Einstein about his work.\", \"roles\": [\"young researcher\", \"Albert Einstein\"], \"GPT_role\": \"Albert Einstein\", \"user_role\": \"young researcher\"\n"
                        ]
                    },
    
    "role_inference_query": {
                            "template": "\"setting\": \"{}\"",
                            "n_args": 1
                        },

    "chat_bot_initiation":{
                        "template": "{0}. The user is a {2}. Act as if you were {3}. Initiate a conversation as {3} in {1}. Generate one conversation line. You can only speak {1} on level {4}. {4} is defined as {5}. Start the response with: {3}: ...",
                        "n_args": 6
                        },

    "conversation_caption_generation":
                        {
                            "template": "Generate a setting caption. The setting :{}. There are 2 participants. Participants are {} and {}. Write 1-2 sentences to explain what is happening. Clearly state who are the participants. Don't generate new lines. Use simple english.",
                            "n_args": 3
                        },

    "feedback_initiation":{
                            "template": "Feedback initiation {} {}",
                            "n_args": 2
                        },


    "language_level_refinement": {
                                    "template" : "The text was written by GPT using {0} CEFR level of proficiency. {0} level is defined as {1}. Refine the text to be on a {0} level: ",
                                    "n_args" : 2
                                },

    "role_following_refinement": {
                                    "template": "You are a {0}. You are speaking to {1}. Make minimal changes to the tone and voice of the provided sentence to sound more like {0}. ",
                                    "n_args" : 2
                                },

    "user_engagement_refinement":{
                                    "template": "I will give you a text by {0} talking to {1} in a setting described as  \"{2}\". Make minimal changes to the text from {0} so it encourages longer and more detailed response from {1}. Keep the level of language proficiency used. Do not change the text length. \n\nExample: This building is so cool.\nRefinement: This is such an amazing building, I think it's Vienna Secession style.\nExample: ",
                                    "n_args": 3
                                }
}